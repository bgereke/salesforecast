% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{get_holiday_df}
\alias{get_holiday_df}
\title{Produce a holiday data frame formatted for Prophet.}
\usage{
get_holiday_df(train, test, holidays, lower_window = 0, upper_window = 0)
}
\arguments{
\item{train}{A data frame of weekly sales training
data. Must a Date column and logical columns for each
of the holidays of interest. The names of the holiday
columns should be formatted in camel case as IsHoliday
where "Holiday" is the holiday of interest (e.g.,
IsChristmas, IsEaster, etc.).}

\item{test}{A data frame of weekly sales testing
data. Must be formatted similarly to the train data frame.}

\item{holidays}{A list of holidays to include. For each
holiday, a corresponding "IsHoliday" column must be present
the train and test data frames.}

\item{lower_window}{Int specifying a range of days prior to
the date to be included as holidays. For example,
lower_window = -14 will include the two weeks prior to the
date as holidays. Must be a negative number. See Prophet
docs for more information.}

\item{upper_window}{Int specifying a range of days after
the date to be included as holidays. For example,
upper_window = 14 will include 2 weeks after the date as
holidays. Must be a positive number. See Prophet
docs for more information.}
}
\value{
A data frame with columns holiday (character) and
ds (date type) and optionally columns lower_window and
upper_window which specify a range of days around the date
to be included as holidays.
}
\description{
Produce a holiday data frame formatted for Prophet.
}
\examples{
train_start_date <- as.Date('06/12/2019', format = '\%d/\%m/\%Y')
test_start_date <- as.Date('04/12/2020', format = '\%d/\%m/\%Y')
train_df <- data.frame(Date = seq(train_start_date, length.out = 10, by = 7),
                      IsChristmas = as.logical(c(0, 0, 0, 1, 0, 0, 0, 0, 0, 0)))
test_df <- data.frame(Date = seq(test_start_date, length.out = 10, by = 7),
                      IsChristmas = as.logical(c(0, 0, 0, 1, 0, 0, 0, 0, 0, 0)))
holiday_df <- get_holiday_df(train_df, test_df,
holidays = c('Christmas'),
lower_window = -14, upper_window = 7)
head(holiday_df)
}
